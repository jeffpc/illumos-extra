From 90624ceffd11ff81ad4d2bfd3c1c3e58dad68d46 Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Sat, 23 Mar 2013 15:44:40 +0000
Subject: [PATCH] make should support a prefix

---
 src/build                                       |   17 +++-
 src/make_src/Make/bin/make/common/main.cc       |   90 +++++++++++++++++------
 src/make_src/Make/bin/make/common/read.cc       |   20 +++++
 src/make_src/Make/bin/make/make.svr4/Makefile   |   12 ++--
 src/make_src/Make/bin/make/make.xpg4/Makefile   |    6 +-
 src/make_src/Make/bin/make/smake/src/Variant.mk |    6 +-
 src/make_src/Make/lib/makestate/src/Variant.mk  |   12 ++-
 src/make_src/rules/derived.mk                   |    2 +-
 src/make_src/rules/master.mk                    |    3 +-
 9 files changed, 124 insertions(+), 44 deletions(-)

diff --git a/src/build b/src/build
index 967f5af..65e0603 100755
--- a/src/build
+++ b/src/build
@@ -40,6 +40,7 @@
 #	CC		$CC -c x.c		preferred C compiler
 #	CCC		$CCC -c x.cc		preferred C++ compiler
 #	MAKE		$MAKE {target}		preferred "make" executable
+#	PREFIX		/usr			the target path in the fs
 #	DESTDIR		$DESTDIR/usr/ccs	root of installation tree
 
 # Legal arguments are "clean", "all", and "install".  The default
@@ -87,6 +88,11 @@ endif
 setenv CC64 $CC
 setenv CCC64 $CCC
 
+if ( ! $?PREFIX ) then
+    setenv PREFIX /usr
+endif
+
+
 if ( ! $?DESTDIR ) then
     setenv DESTDIR ../../destdir/root_`uname -p`
 endif
@@ -113,15 +119,16 @@ echo Using variables:
 echo
 echo '	'CC = $CC
 echo '	'CCC = $CCC
+echo '	'PREFIX = $PREFIX
 echo '	'DESTDIR = $DESTDIR
 echo '	'MAKE = $MAKE
 echo '	'STUDIOBIN = $STUDIOBIN
 echo
-$MAKE CC=${CC} CCC=${CCC} DESTDIR=${DESTDIR} MAKE=${MAKE} $args
+$MAKE CC=${CC} CCC=${CCC} DESTDIR=${DESTDIR} MAKE=${MAKE} PREFIX=${PREFIX} $args
 echo
 echo === build complete ===
 echo
-echo Binaries installed at $DESTDIR':'
-echo
-cd $DESTDIR
-find . -type f -print | sed 's/^/	/'
+echo Binaries installed at $DESTDIR'/'$PREFIX':'
+#echo
+#cd $DESTDIR/$PREFIX
+#find . -type f -print | sed 's/^/	/'
diff --git a/src/make_src/Make/bin/make/common/main.cc b/src/make_src/Make/bin/make/common/main.cc
index e594d59..7334fb5 100644
--- a/src/make_src/Make/bin/make/common/main.cc
+++ b/src/make_src/Make/bin/make/common/main.cc
@@ -117,8 +117,20 @@ extern void job_adjust_fini();
 /*
  * Defined macros
  */
-#define	LD_SUPPORT_ENV_VAR	NOCATGETS("SGS_SUPPORT")
+#define	LD_SUPPORT_ENV_VAR	NOCATGETS("SGS_SUPPORT_32")
+#define	LD_SUPPORT_ENV_VAR_32	NOCATGETS("SGS_SUPPORT_32")
+#define	LD_SUPPORT_ENV_VAR_64	NOCATGETS("SGS_SUPPORT_64")
 #define	LD_SUPPORT_MAKE_LIB	NOCATGETS("libmakestate.so.1")
+#define	LD_SUPPORT_MAKE_LIB_DIR	NOCATGETS("/lib")
+#define	LD_SUPPORT_MAKE_LIB_DIR_64	NOCATGETS("/64")
+
+#ifdef PREFIX
+#define MTOSTR(x)	#x
+#define XMTOSTR(x)	MTOSTR(x)
+#define	MAKE_PREFIX	XMTOSTR(PREFIX)
+#else
+#error	"PREFIX environment variable should be defined"
+#endif
 
 /*
  * typedefs & structs
@@ -2070,46 +2082,80 @@ int   done=0;
  *	  if it's not already in there.
  *	The SGS_SUPPORT env var and libmakestate.so.1 is used by
  *	  the linker ld to report .make.state info back to make.
+ *
+ * In the new world we always will set the 32-bit and 64-bit versions of this
+ * variable explicitly so that we can take into account the correct isa and our
+ * prefix. So say that the prefix was /opt/local. Then we would want to search
+ * /opt/local/lib/libmakestate.so.1:libmakestate.so.1. We still want to search
+ * the original location just as a safety measure.
  */
 static void
 set_sgs_support()
 {
 	int		len;
-	char		*newpath;
-	char		*oldpath;
-	static char	*prev_path;
+	char		*newpath, *newpath64;
+	char		*oldpath, *oldpath64;
+	static char	*prev_path, *prev_path64;
 
-	oldpath = getenv(LD_SUPPORT_ENV_VAR);
+	oldpath = getenv(LD_SUPPORT_ENV_VAR_32);
 	if (oldpath == NULL) {
-		len = strlen(LD_SUPPORT_ENV_VAR) + 1 +
-			strlen(LD_SUPPORT_MAKE_LIB) + 1;
+		len = snprintf(NULL, 0, "%s=%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_32,
+		    MAKE_PREFIX,
+		    LD_SUPPORT_MAKE_LIB_DIR,
+		    LD_SUPPORT_MAKE_LIB, LD_SUPPORT_MAKE_LIB) + 1;
 		newpath = (char *) malloc(len);
-		sprintf(newpath, "%s=", LD_SUPPORT_ENV_VAR);
+		sprintf(newpath, "%s=%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_32,
+		    MAKE_PREFIX,
+		    LD_SUPPORT_MAKE_LIB_DIR,
+		    LD_SUPPORT_MAKE_LIB, LD_SUPPORT_MAKE_LIB);
 	} else {
-		len = strlen(LD_SUPPORT_ENV_VAR) + 1 + strlen(oldpath) + 1 +
-			strlen(LD_SUPPORT_MAKE_LIB) + 1;
+		len = snprintf(NULL, 0, "%s=%s:%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_32, oldpath, MAKE_PREFIX,
+		    LD_SUPPORT_MAKE_LIB_DIR, LD_SUPPORT_MAKE_LIB,
+		    LD_SUPPORT_MAKE_LIB) + 1;
 		newpath = (char *) malloc(len);
-		sprintf(newpath, "%s=%s", LD_SUPPORT_ENV_VAR, oldpath);
-	}
-
-#if defined(TEAMWARE_MAKE_CMN)
-
-	/* function maybe_append_str_to_env_var() is defined in avo_util library
-	 * Serial make should not use this library !!!
-	 */
-	maybe_append_str_to_env_var(newpath, LD_SUPPORT_MAKE_LIB);
-#else
-	if (oldpath == NULL) {
-		sprintf(newpath, "%s%s", newpath, LD_SUPPORT_MAKE_LIB);
+		sprintf(newpath, "%s=%s:%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_32, oldpath, MAKE_PREFIX,
+		    LD_SUPPORT_MAKE_LIB_DIR, LD_SUPPORT_MAKE_LIB,
+		    LD_SUPPORT_MAKE_LIB);
+	}
+
+	oldpath64 = getenv(LD_SUPPORT_ENV_VAR_64);
+	if (oldpath64 == NULL) {
+		len = snprintf(NULL, 0, "%s=%s/%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_64, MAKE_PREFIX, LD_SUPPORT_MAKE_LIB_DIR,
+		    LD_SUPPORT_MAKE_LIB_DIR_64, LD_SUPPORT_MAKE_LIB,
+		    LD_SUPPORT_MAKE_LIB) + 1;
+		newpath64 = (char *) malloc(len);
+		sprintf(newpath64, "%s=%s/%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_64, MAKE_PREFIX, LD_SUPPORT_MAKE_LIB_DIR,
+		    LD_SUPPORT_MAKE_LIB_DIR_64, LD_SUPPORT_MAKE_LIB,
+		    LD_SUPPORT_MAKE_LIB);
 	} else {
-		sprintf(newpath, "%s:%s", newpath, LD_SUPPORT_MAKE_LIB);
+		len = snprintf(NULL, 0, "%s=%s:%s/%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_64, oldpath64, MAKE_PREFIX,
+		    LD_SUPPORT_MAKE_LIB_DIR, LD_SUPPORT_MAKE_LIB_DIR_64,
+		    LD_SUPPORT_MAKE_LIB, LD_SUPPORT_MAKE_LIB) + 1;
+		newpath64 = (char *) malloc(len);
+		sprintf(newpath64, "%s=%s:%s/%s/%s/%s:%s",
+		    LD_SUPPORT_ENV_VAR_64, oldpath64, MAKE_PREFIX,
+		    LD_SUPPORT_MAKE_LIB_DIR, LD_SUPPORT_MAKE_LIB_DIR_64,
+		    LD_SUPPORT_MAKE_LIB, LD_SUPPORT_MAKE_LIB);
 	}
-#endif
+
 	putenv(newpath);
 	if (prev_path) {
 		free(prev_path);
 	}
 	prev_path = newpath;
+
+	putenv(newpath64);
+	if (prev_path64) {
+		free(prev_path64);
+	}
+	prev_path64 = newpath64;
 }
 
 /*
diff --git a/src/make_src/Make/bin/make/common/read.cc b/src/make_src/Make/bin/make/common/read.cc
index 586d609..626d736 100644
--- a/src/make_src/Make/bin/make/common/read.cc
+++ b/src/make_src/Make/bin/make/common/read.cc
@@ -52,6 +52,14 @@
 extern "C" Avo_err *avo_find_run_dir(char **dirp);
 #endif
 
+#ifdef PREFIX
+#define MTOSTR(x)	#x
+#define XMTOSTR(x)	MTOSTR(x)
+#define	MAKE_PREFIX	XMTOSTR(PREFIX)
+#else
+#error	"PREFIX environment variable should be defined"
+#endif
+
 /*
  * typedefs & structs
  */
@@ -127,6 +135,10 @@ read_simple_file(register Name makefile_name, register Boolean chase_path, regis
 	char                    *run_dir, makerules_dir[BUFSIZ];
 #endif
 
+#if defined(SUN5_0)
+	char			*prefix_dir;
+#endif
+
 	wchar_t * wcb = get_wstring(makefile_name->string_mb);
 
 #ifdef NSE
@@ -156,6 +168,14 @@ read_simple_file(register Name makefile_name, register Boolean chase_path, regis
 						&makefile_path,
 						-1);
 #ifdef SUN5_0
+
+				(void) asprintf(&prefix_dir,
+				    NOCATGETS("%s/share/lib/make"),
+				    MAKE_PREFIX);
+				add_dir_to_path(prefix_dir,
+						&makefile_path,
+						-1);
+				free(prefix_dir);
 				add_dir_to_path(NOCATGETS("/usr/share/lib/make"),
 						&makefile_path,
 						-1);
diff --git a/src/make_src/Make/bin/make/make.svr4/Makefile b/src/make_src/Make/bin/make/make.svr4/Makefile
index 96000a3..2bdf786 100644
--- a/src/make_src/Make/bin/make/make.svr4/Makefile
+++ b/src/make_src/Make/bin/make/make.svr4/Makefile
@@ -30,9 +30,9 @@ include $(TOP)/rules/master.mk
 all clean clobber l10n_install:
 
 install:
-	$(INSTALL) -d $(DESTDIR)/usr/lib
-	$(INSTALL) -d $(DESTDIR)/usr/ccs/lib
-	rm -f $(DESTDIR)/usr/lib/svr4.make
-	rm -f $(DESTDIR)/usr/ccs/lib/svr4.make
-	ln $(DESTDIR)/usr/ccs/bin/make $(DESTDIR)/usr/lib/svr4.make
-	(cd $(DESTDIR)/usr/ccs/lib; ln -s ../../lib/svr4.make svr4.make)
+	$(INSTALL) -d $(DESTDIR)/$(PREFIX)/lib
+	$(INSTALL) -d $(DESTDIR)/$(PREFIX)/ccs/lib
+	rm -f $(DESTDIR)/$(PREFIX)/lib/svr4.make
+	rm -f $(DESTDIR)/$(PREFIX)/ccs/lib/svr4.make
+	ln $(DESTDIR)/$(PREFIX)/ccs/bin/make $(DESTDIR)/$(PREFIX)/lib/svr4.make
+	(cd $(DESTDIR)/$(PREFIX)/ccs/lib; ln -s ../../lib/svr4.make svr4.make)
diff --git a/src/make_src/Make/bin/make/make.xpg4/Makefile b/src/make_src/Make/bin/make/make.xpg4/Makefile
index 6688c9d..77f4b37 100644
--- a/src/make_src/Make/bin/make/make.xpg4/Makefile
+++ b/src/make_src/Make/bin/make/make.xpg4/Makefile
@@ -31,6 +31,6 @@ include $(TOP)/rules/master.mk
 all clean clobber l10n_install:
 
 install:
-	$(INSTALL) -d $(DESTDIR)/usr/xpg4/bin
-	rm -f $(DESTDIR)/usr/xpg4/bin/make
-	ln $(DESTDIR)/usr/ccs/bin/make $(DESTDIR)/usr/xpg4/bin/make
+	$(INSTALL) -d $(DESTDIR)/$(PREFIX)/xpg4/bin
+	rm -f $(DESTDIR)/$(PREFIX)/xpg4/bin/make
+	ln $(DESTDIR)/$(PREFIX)/ccs/bin/make $(DESTDIR)/$(PREFIX)/xpg4/bin/make
diff --git a/src/make_src/Make/bin/make/smake/src/Variant.mk b/src/make_src/Make/bin/make/smake/src/Variant.mk
index c2e5f64..b895e79 100644
--- a/src/make_src/Make/bin/make/smake/src/Variant.mk
+++ b/src/make_src/Make/bin/make/smake/src/Variant.mk
@@ -110,10 +110,10 @@ IHDR		= make.rules.file
 VIHDR		= svr4.make.rules.file
 HDR		= ${PKG_TOP}/bin/make/common/make.rules.file
 VHDR		= ${PKG_TOP}/bin/make/common/svr4.make.rules.file
-HDRSDIR		= $(DESTDIR)/usr/share/lib/make
+HDRSDIR		= $(DESTDIR)/$(PREFIX)/share/lib/make
 HDRFILE		= make.rules
 VHDRFILE	= svr4.make.rules
-SMAKEDIR	= $(DESTDIR)/usr/ccs/bin
+SMAKEDIR	= $(DESTDIR)/$(PREFIX)/ccs/bin
 
 install-make-bin: make
 	$(INSTALL) -d $(SMAKEDIR)
@@ -137,7 +137,7 @@ MAKE_MSG	= SUNW_SPRO_MAKE.msg
 I18N_DIRS	= ../../common
 TEXTDOMAIN	= SUNW_SPRO_MAKE
 APPPATH		= $(PKG_TOP)/bin/make/smake/$(VARIANT)
-LIB_DESTDIR	= $(DESTDIR)/usr/lib
+LIB_DESTDIR	= $(DESTDIR)/$(PREFIX)/lib
 CAT_DESTDIR	= $(LIB_DESTDIR)/locale/C/LC_MESSAGES
 
 $(CAT_DESTDIR):
diff --git a/src/make_src/Make/lib/makestate/src/Variant.mk b/src/make_src/Make/lib/makestate/src/Variant.mk
index 26971d5..a961615 100644
--- a/src/make_src/Make/lib/makestate/src/Variant.mk
+++ b/src/make_src/Make/lib/makestate/src/Variant.mk
@@ -68,6 +68,12 @@ $(DLIBNAME) : $(LIBNAME)
 all: $(DLIBNAME)
 
 install: all
-	${INSTALL} -d ${DESTDIR}/usr/lib$(VAR_DIR)
-	${RM} ${DESTDIR}/usr/lib$(VAR_DIR)/$(DLIBNAME)
-	${INSTALL} $(DLIBNAME) ${DESTDIR}/usr/lib$(VAR_DIR)
+	${INSTALL} -d ${DESTDIR}/${PREFIX}/lib/$(VAR_DIR)
+	${RM} ${DESTDIR}/${PREFIX}/lib$(VAR_DIR)/$(DLIBNAME)
+	${INSTALL} $(DLIBNAME) ${DESTDIR}/${PREFIX}/lib$(VAR_DIR)
+	if [[ -n "$(VAR_DIR)" && ! -h "${DESTDIR}/${PREFIX}/lib/64"  ]]; then \
+	    cd ${DESTDIR}/${PREFIX}/lib; \
+	    ln -s $$(basename $(VAR_DIR)) 64; \
+	else \
+		/bin/true; \
+	fi
diff --git a/src/make_src/rules/derived.mk b/src/make_src/rules/derived.mk
index 89fd719..859d2e2 100644
--- a/src/make_src/rules/derived.mk
+++ b/src/make_src/rules/derived.mk
@@ -61,6 +61,6 @@ $(VARIANT) $(V9_VARIANT): FRC
 	if [ ! -d $@ ]; then \
 		mkdir $@ ; \
 	fi
-	cd $@; $(MAKE) $(MFLAGS) -f $(SRC)/Variant.mk RELEASE_VER="$(RELEASE_VER)" DESTDIR=$(DESTDIR) V9FLAGS="$(V9FLAGS)" VAR_DIR=$(VAR_DIR) CC=$(CC) CCC=$(CCC) $(TARG);
+	cd $@; $(MAKE) $(MFLAGS) -f $(SRC)/Variant.mk RELEASE_VER="$(RELEASE_VER)" DESTDIR=$(DESTDIR) PREFIX=$(PREFIX) V9FLAGS="$(V9FLAGS)" VAR_DIR=$(VAR_DIR) CC=$(CC) CCC=$(CCC) $(TARG);
 
 FRC:
diff --git a/src/make_src/rules/master.mk b/src/make_src/rules/master.mk
index eae7f19..f113efe 100644
--- a/src/make_src/rules/master.mk
+++ b/src/make_src/rules/master.mk
@@ -57,7 +57,8 @@ YACC =		/usr/ccs/bin/yacc
 ##-----------------------------------------------------------------
 
 CPPFLAGS +=	-DINTER \
-		-I$(TOP)/include 
+		-I$(TOP)/include \
+		-DPREFIX=$(PREFIX)
 
 LINTFLAGS +=	-buxz
 
-- 
1.7.3.4

